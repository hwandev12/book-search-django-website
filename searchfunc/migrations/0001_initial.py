# Generated by Django 4.0.4 on 2022-05-14 12:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import searchfunc.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_organised', models.BooleanField(default=False)),
                ('is_agent', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BookCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'verbose_name': 'Book Category',
                'verbose_name_plural': 'Book Category',
            },
        ),
        migrations.CreateModel(
            name='BooksToRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(max_length=100)),
                ('book_subititle', models.CharField(max_length=70)),
                ('book_cover_image', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'Book to read',
                'verbose_name_plural': 'Books to read',
            },
        ),
        migrations.CreateModel(
            name='ContactMePartContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_header', models.CharField(max_length=60)),
                ('contact_text', models.TextField(max_length=300)),
            ],
            options={
                'verbose_name': 'Contact me Context',
            },
        ),
        migrations.CreateModel(
            name='CountPageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_img', models.FileField(upload_to='', validators=[searchfunc.validators.validate_file_extension])),
                ('count_number', models.IntegerField()),
                ('count_text', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Count Page',
                'verbose_name_plural': 'Count Page',
            },
        ),
        migrations.CreateModel(
            name='EssentialRightContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('essential_right_image', models.ImageField(upload_to='')),
                ('essentials_right_content', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Essential Right',
                'verbose_name_plural': 'Essential Right',
            },
        ),
        migrations.CreateModel(
            name='EssentialsPageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('essential_header_text', models.CharField(max_length=200)),
                ('esential_paragraph', models.TextField(max_length=700)),
                ('essential_page_image', models.FileField(upload_to='', validators=[searchfunc.validators.validate_file_extension])),
            ],
            options={
                'verbose_name': 'Essential',
                'verbose_name_plural': 'Essentials',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='Alisher-Navoi.png', upload_to='')),
                ('bio', models.TextField()),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SliderImagesContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_img', models.ImageField(upload_to='images')),
                ('slider_header_content', models.CharField(max_length=100)),
                ('slider_text_content', models.TextField(max_length=400)),
            ],
            options={
                'verbose_name': 'Slider Content',
            },
        ),
        migrations.CreateModel(
            name='WhoWeAreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_image', models.ImageField(upload_to='')),
                ('right_content_text', models.TextField(max_length=700)),
                ('right_content_1', models.CharField(max_length=60)),
                ('right_content_2', models.CharField(max_length=60)),
                ('right_content_3', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Who we are',
                'verbose_name_plural': 'Who we are page',
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=40)),
                ('age', models.IntegerField(default=0)),
                ('email', models.EmailField(max_length=254)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='searchfunc.agent')),
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searchfunc.profile')),
            ],
            options={
                'verbose_name': 'Users Online',
                'verbose_name_plural': 'Users Model',
            },
        ),
        migrations.CreateModel(
            name='BookCardsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_cover', models.ImageField(upload_to='')),
                ('book_name', models.CharField(max_length=100)),
                ('book_subtitle', models.CharField(max_length=100)),
                ('book_description', models.TextField(max_length=300)),
                ('full_description', models.TextField(max_length=700)),
                ('shop_details_description', models.TextField(blank=True, max_length=700)),
                ('shop_cost', models.IntegerField(blank=True, default=1)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='searchfunc.bookcategorymodel')),
            ],
            options={
                'verbose_name': 'Card Books',
                'verbose_name_plural': 'Card Books',
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='organiser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searchfunc.profile'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
